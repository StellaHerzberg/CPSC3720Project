{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\annac\\\\CPSC3720Project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// File defines the main React component for the Tiger Tix frontend application. Retrieves event data from the backend\n// API and provides functionality to retrieve event data, purchase tickets, etc.\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport VoiceTest from \"./Voice\";\n\n// Serves as root componenet of web app. Fetches the event data, displays events, handles user interactions.\n// Returns: the webpage displaying all available events and buttons\n// Side effects: indicates network request on component mount to get event data and update state when \n// necessary.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // Gets event data from API when it first mounts. Ensures list is populated when page loads.\n  // Sends request to backend and updates local state\n  useEffect(() => {\n    fetch('http://localhost:6001/api/events').then(res => res.json()).then(data => setEvents(data)).catch(err => console.error(err));\n  }, []);\n\n  //Handles process of purchasing tocker for a given event. Sends request to API to decrement available\n  // ticket count, etc.\n  // Params: eventName - name of event that a ticket is being purchased for\n  // Params: id - unique ID of event being purchased\n  // Returns: Promise<void> - operations to update database\n  const buyTicket = async (eventName, id) => {\n    // Send request\n    try {\n      const res = await fetch(`http://localhost:6001/api/events/${id}/purchase`, {\n        method: 'POST'\n      });\n      const data = await res.json();\n\n      // Handles errors\n      if (!res.ok) {\n        alert(`Error: ${data.error}`);\n        return;\n      }\n\n      //Update ticker count for purchase\n      setEvents(prevEvents => prevEvents.map(event => event.id === id ? {\n        ...event,\n        numTickets: data.ticketsRemaining\n      } : event));\n\n      //Notify user\n      alert(`Ticket purchased for: ${eventName}. Remaining tickets: ${data.ticketsRemaining}`);\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to purchase ticket.\");\n    }\n  };\n\n  //Displays page title, list of events with all the event information plus operations\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      role: \"webpage_title\",\n      children: \"Clemson Campus Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        role: \"list_of_available_events\",\n        children: [event.eventName, \" - \", event.eventDate, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          role: \"ticket_purchase_button\",\n          onClick: () => buyTicket(event.eventName, event.id),\n          children: \"Purchase Event Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), \" - Tickets Left: \", event.numTickets]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voice Input Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click the mic and say something \\u2014 it\\u2019ll print what you said below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceTest, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","VoiceTest","jsxDEV","_jsxDEV","App","_s","events","setEvents","fetch","then","res","json","data","catch","err","console","error","buyTicket","eventName","id","method","ok","alert","prevEvents","map","event","numTickets","ticketsRemaining","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","eventDate","onClick","style","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/annac/CPSC3720Project/frontend/src/App.js"],"sourcesContent":["// File defines the main React component for the Tiger Tix frontend application. Retrieves event data from the backend\r\n// API and provides functionality to retrieve event data, purchase tickets, etc.\r\nimport React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport VoiceTest from \"./Voice\";\r\n\r\n// Serves as root componenet of web app. Fetches the event data, displays events, handles user interactions.\r\n// Returns: the webpage displaying all available events and buttons\r\n// Side effects: indicates network request on component mount to get event data and update state when \r\n// necessary.\r\nfunction App() {\r\n  const [events, setEvents] = useState([]);\r\n  \r\n  // Gets event data from API when it first mounts. Ensures list is populated when page loads.\r\n  // Sends request to backend and updates local state\r\n  useEffect(() => {\r\n    fetch('http://localhost:6001/api/events')\r\n    .then((res) => res.json())\r\n    .then((data) => setEvents(data))\r\n    .catch((err) => console.error(err));\r\n  }, [])\r\n\r\n  //Handles process of purchasing tocker for a given event. Sends request to API to decrement available\r\n  // ticket count, etc.\r\n  // Params: eventName - name of event that a ticket is being purchased for\r\n  // Params: id - unique ID of event being purchased\r\n  // Returns: Promise<void> - operations to update database\r\n  const buyTicket = async (eventName, id) => {\r\n\r\n    // Send request\r\n    try {\r\n      const res = await fetch(`http://localhost:6001/api/events/${id}/purchase`, {\r\n        method: 'POST'\r\n      });\r\n\r\n      const data = await res.json();\r\n      \r\n      // Handles errors\r\n      if (!res.ok) {\r\n        alert(`Error: ${data.error}`);\r\n        return;\r\n      }\r\n\r\n      //Update ticker count for purchase\r\n      setEvents(prevEvents =>\r\n        prevEvents.map(event =>\r\n          event.id === id ? { ...event, numTickets: data.ticketsRemaining} : event\r\n        )\r\n      );\r\n\r\n      //Notify user\r\n      alert(`Ticket purchased for: ${eventName}. Remaining tickets: ${data.ticketsRemaining}`);\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to purchase ticket.\");\r\n    }\r\n  };\r\n\r\n  //Displays page title, list of events with all the event information plus operations\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 role=\"webpage_title\">Clemson Campus Events</h1>\r\n        <ul>\r\n        {events.map((event) => (\r\n          <li role=\"list_of_available_events\" key={event.id}>\r\n            {event.eventName} - {event.eventDate}{' '}\r\n              <button role = \"ticket_purchase_button\" onClick={() => buyTicket(event.eventName, event.id)}>Purchase Event\r\n                Ticket</button> - Tickets Left: {event.numTickets} \r\n          </li> \r\n        ))}\r\n        </ul>\r\n                <div style={{ marginBottom: \"20px\" }}>\r\n        <h2>Voice Input Test</h2>\r\n        <p>Click the mic and say something — it’ll print what you said below.</p>\r\n        <VoiceTest/> \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}