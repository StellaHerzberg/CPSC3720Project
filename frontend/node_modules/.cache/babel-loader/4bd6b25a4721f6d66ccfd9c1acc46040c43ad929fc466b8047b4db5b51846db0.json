{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\epfer\\\\Clemson\\\\CPSC3720\\\\Project\\\\frontend\\\\src\\\\AITest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { callOllama } from './ollama.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AITest() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n\n  //   const handleOllama = async (req, res) => {\n  //     const rest = await callOllama(prompt);\n  //     setResponse(res.message?.content || JSON.stringify(res));\n  //   }\n\n  const handleOllama = async () => {\n    try {\n      var _res$choices, _res$choices$, _res$choices$$message, _res$choices$$message2;\n      const res = await callOllama(prompt);\n      // setResponse(res.message?.content || JSON.stringify(res));\n      // const message = res.choices?.[0]?.message?.content || JSON.stringify(res);\n      // setResponse(message);\n      const message = ((_res$choices = res.choices) === null || _res$choices === void 0 ? void 0 : (_res$choices$ = _res$choices[0]) === null || _res$choices$ === void 0 ? void 0 : (_res$choices$$message = _res$choices$.message) === null || _res$choices$$message === void 0 ? void 0 : (_res$choices$$message2 = _res$choices$$message.content) === null || _res$choices$$message2 === void 0 ? void 0 : _res$choices$$message2.trim()) || JSON.stringify(res);\n      setResponse(message);\n    } catch (error) {\n      console.error('Error calling Ollama', error);\n      setResponse('Error: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AI API Test\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      placeholder: \"Enter your desired event!\",\n      style: {\n        padding: \"12px 24px\",\n        fontSize: \"20px\",\n        borderRadius: \"8px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOllama,\n      children: \"Process Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \", response]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(AITest, \"f7/ly1Eyh5qbUOx1OL12RYnrAkI=\");\n_c = AITest;\nvar _c;\n$RefreshReg$(_c, \"AITest\");","map":{"version":3,"names":["React","useState","callOllama","jsxDEV","_jsxDEV","AITest","_s","prompt","setPrompt","response","setResponse","handleOllama","_res$choices","_res$choices$","_res$choices$$message","_res$choices$$message2","res","message","choices","content","trim","JSON","stringify","error","console","className","children","value","onChange","e","target","placeholder","style","padding","fontSize","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/epfer/Clemson/CPSC3720/Project/frontend/src/AITest.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { callOllama } from './ollama.js';\r\n\r\nexport default function AITest() {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n//   const handleOllama = async (req, res) => {\r\n//     const rest = await callOllama(prompt);\r\n//     setResponse(res.message?.content || JSON.stringify(res));\r\n//   }\r\n\r\n    const handleOllama = async () => {\r\n        try {\r\n            const res = await callOllama(prompt);\r\n            // setResponse(res.message?.content || JSON.stringify(res));\r\n            // const message = res.choices?.[0]?.message?.content || JSON.stringify(res);\r\n            // setResponse(message);\r\n            const message = res.choices?.[0]?.message?.content?.trim() || JSON.stringify(res);\r\n            setResponse(message);\r\n        }\r\n        catch (error) {\r\n            console.error('Error calling Ollama', error);\r\n            setResponse('Error: ' + error.message);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className = \"AI API Test\" >\r\n            <textarea \r\n                value = {prompt}\r\n                onChange = {(e) => setPrompt(e.target.value)}\r\n                placeholder = \"Enter your desired event!\"\r\n                style={{\r\n                    padding: \"12px 24px\",\r\n                    fontSize: \"20px\",\r\n                    borderRadius: \"8px\",\r\n        }}\r\n            />\r\n            <button onClick = {handleOllama}>Process Request</button>\r\n            <div className = \"response\"> \r\n                <strong\r\n                    style = {{fontSize: \"30px\"}}\r\n                    >Response:</strong> {response}\r\n            </div>\r\n            </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA;EACA;EACA;;EAEI,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACA,MAAMC,GAAG,GAAG,MAAMd,UAAU,CAACK,MAAM,CAAC;MACpC;MACA;MACA;MACA,MAAMU,OAAO,GAAG,EAAAL,YAAA,GAAAI,GAAG,CAACE,OAAO,cAAAN,YAAA,wBAAAC,aAAA,GAAXD,YAAA,CAAc,CAAC,CAAC,cAAAC,aAAA,wBAAAC,qBAAA,GAAhBD,aAAA,CAAkBI,OAAO,cAAAH,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2BK,OAAO,cAAAJ,sBAAA,uBAAlCA,sBAAA,CAAoCK,IAAI,CAAC,CAAC,KAAIC,IAAI,CAACC,SAAS,CAACN,GAAG,CAAC;MACjFN,WAAW,CAACO,OAAO,CAAC;IACxB,CAAC,CACD,OAAOM,KAAK,EAAE;MACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5Cb,WAAW,CAAC,SAAS,GAAGa,KAAK,CAACN,OAAO,CAAC;IAC1C;EACJ,CAAC;EAGD,oBACIb,OAAA;IAAKqB,SAAS,EAAG,aAAa;IAAAC,QAAA,gBAC1BtB,OAAA;MACIuB,KAAK,EAAIpB,MAAO;MAChBqB,QAAQ,EAAKC,CAAC,IAAKrB,SAAS,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAG,2BAA2B;MACzCC,KAAK,EAAE;QACHC,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBC,YAAY,EAAE;MAC1B;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACFnC,OAAA;MAAQoC,OAAO,EAAI7B,YAAa;MAAAe,QAAA,EAAC;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDnC,OAAA;MAAKqB,SAAS,EAAG,UAAU;MAAAC,QAAA,gBACvBtB,OAAA;QACI4B,KAAK,EAAI;UAACE,QAAQ,EAAE;QAAM,CAAE;QAAAR,QAAA,EAC3B;MAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC9B,QAAQ;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAACjC,EAAA,CA7CuBD,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}